---
import { Icon } from 'astro-icon';

type AsProps = { as?: 'a'; href: string; role: 'button' } | { as?: 'button' };
interface CommonProps {
  class?: string;
  backgroundColor?: string;
  fontSize?: string;
  [key: string]: string;
}

type ConditionalProps =
  | { icon?: string; iconSize: string }
  | { icon?: undefined; iconSize?: undefined };

type Props = CommonProps & ConditionalProps & AsProps;

const {
  as,
  icon,
  class: className,
  backgroundColor = 'bg-transparent',
  fontSize = 'text-headline-medium',
  iconSize,
  ...rest
} = Astro.props as Props;

const Component = as || 'button';
---

<Component
  {...rest}
  class:list={[
    `py-2 ${backgroundColor} ${fontSize} border-0  rounded-[48px] ps-3 pe-3 border-solid border-black border-2 ${className} button-text`,
    { 'pe-[3.2rem] ps-[3.2rem]': icon },
  ]}
>
  <slot />
  {
    icon !== undefined && (
      <span class={iconSize}>
        <Icon name={icon} class={iconSize} />
      </span>
    )
  }
</Component>

<style>
  .button-text {
    display: inline-flex;
    align-items: center;
    justify-content: space-between;
    gap: 1.6rem;
    position: relative;
    overflow: hidden;
    transition: stroke 0.5s cubic-bezier(0.3, 1, 0.2, 1),
      color 0.5s cubic-bezier(0.3, 1, 0.2, 1);
    z-index: 1;
  }
  .button-text::before {
    content: '';
    position: absolute;
    inset: 0;
    background-color: #212529;
    transform-origin: bottom;
    transform: scaleY(0);
    transition: transform 0.5s cubic-bezier(0.3, 1, 0.2, 1);
    z-index: -1;
  }
  .button-text:hover {
    color: #f8f9fa;
  }
  .button-text:hover svg {
    stroke: #f8f9fa;
  }
  .button-text:hover::before {
    transform: scaleY(1);
  }
</style>
