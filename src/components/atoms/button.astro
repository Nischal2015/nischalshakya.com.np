---
import { Icon } from 'astro-icon';

type AsProps = { as?: 'a'; href: string; role: 'button' } | { as?: 'button' };
interface CommonProps {
  class?: string;
  backgroundColor?: string;
  fontSize?: string;
}

type ConditionalProps =
  | { icon?: string; iconBgColor?: string; iconSize: string }
  | { icon?: undefined; iconBgColor?: undefined; iconSize: undefined };

type Props = CommonProps & ConditionalProps & AsProps;

const {
  as,
  icon,
  class: className,
  backgroundColor = 'bg-source-primary',
  fontSize = 'text-headline-medium',
  iconBgColor,
  iconSize,
  ...rest
} = Astro.props as Props;

const Component = as || 'button';
---

<Component
  {...rest}
  class:list={[
    `h-[8rem] ${backgroundColor} ${fontSize} border-0  rounded-[48px] py-lg ${className}`,
    { 'pd-sm': icon },
  ]}
>
  <slot />
  {
    icon !== undefined && (
      <span class={iconSize}>
        <Icon name={icon} class={iconBgColor} />
      </span>
    )
  }
</Component>

<style>
  button,
  a {
    display: inline-flex;
    align-items: center;
    justify-content: space-between;
    gap: 1.6rem;
  }
  .py-lg {
    padding-inline: 4.8rem;
  }
  .pd-sm {
    padding-inline: 3.2rem;
  }
</style>
